{"author":{"id":"708ccc11728eda0dd404c8de33ac6b44bac2ffc95b2ffc6ea90ce98ccdb43935"},"ops":[{"type":1,"timestamp":1538494466,"metadata":{"github-id":"MDU6SXNzdWUzNjU5NTY1MjA=","github-url":"https://github.com/MichaelMure/git-bug/issues/55","origin":"github"},"nonce":"E1aj0h/UANUdFsNmQ8OJR5dl+k0=","title":"Identity management","message":"Currently, each `Operation` store the author independently. While it's easier and works well for now, there is some shortcoming:\n\n- no way to update an identity (update an email, update an avatar ...)\n- no easy way to recognize that two author are the same\n- data is stored multiple time (no that much of an issue with the git compression)\n- crypto signature \u0026 authorization scheme is hard to implement\n\nSo I've been thinking it could be changed for the following (rough idea):\n\n- identity (including a public key would be neat) is stored as a JSON in a git blob\n- this blob hash give the `id` for this identity\n- each time an identity is updated, a new blob is created with the new values and these blob are linked together in a chain of commit, the head being the last state.\n- in each operations, actor(s) are simply identified with the id.\n\nNow, I'm not sure yet how these identities should be stored and distributed. a git ref for each identity ? Each required identity linked in the `OperationPack` git tree ? A master ref aggregating all known identities ?\n\nHopefully this would be the last of the backward-incompatible change in the data model","files":null}]}