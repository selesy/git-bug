{"author":{"id":"708ccc11728eda0dd404c8de33ac6b44bac2ffc95b2ffc6ea90ce98ccdb43935"},"ops":[{"type":3,"timestamp":1539378109,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQyOTQ2MTEzMA==","github-url":"https://github.com/MichaelMure/git-bug/issues/56#issuecomment-429461130"},"nonce":"Y8qi/z90fNf0CB1zKcVwE8WiC6g=","message":"@cfilipov It won't be a problem for syncing.\n\nThe Github importer is tagging operation in git-bug with the corresponding id on Github (for example: https://github.com/MichaelMure/git-bug/blob/master/bridge/github/import.go#L134). When doing an import again, the importer will look for this tag to recognize an already imported event and import what is missing.\n\nFor the exporter it's a little trickier because you can't tag an already persisted operation, the data model is immutable. What is possible though is to create a new operation (let's call it `SetMetadataOperation`) that will tag retroactively another operation (the same way `EditCommentOperation` operate on a previous comment). When a bug is compiled into a snapshot, this new operation will append the new tag into a previously defined operation.\n\nThe Github exporter will replicate the operation stored in git-bug through the Github API and then add in git-bug a series of `SetMetadataOperation` to tag retroactively the operation with the corresponding Github id. When doing another export, only the operation that are not tagged will be replicated on Github.\n\nSo yes, the timestamp won't match exactly but I don't think that it will be that much of a problem, especially if the exporter is ran automatically after each edit.","files":null},{"type":3,"timestamp":1539378324,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQyOTQ2MjAyMQ==","github-url":"https://github.com/MichaelMure/git-bug/issues/56#issuecomment-429462021"},"nonce":"xGrZn13LmAf/qD/plKSBoMedzSI=","message":"Alternatively, the exporter could also use the [NoOpOperation](https://github.com/MichaelMure/git-bug/blob/master/bug/op_noop.go) to store arbitrary metadata in an issue timeline without doing any changes.","files":null},{"type":3,"timestamp":1539378419,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQyOTQ2MjQyMA==","github-url":"https://github.com/MichaelMure/git-bug/issues/56#issuecomment-429462420"},"nonce":"llqIn4UHmWHeK3WE6y7yEuSbE44=","message":"@cfilipov Btw, if you want to give it a try you are more than welcome, I probably won't have time to work on it for a while as I just started a new job.","files":null},{"type":3,"timestamp":1559991953,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDUwMDExNTc1Nw==","github-url":"https://github.com/MichaelMure/git-bug/issues/56#issuecomment-500115757"},"nonce":"+cAY/FZKWTiQqbgabfXM865976A=","message":"This is @A-Hilaly 's task now, as part of the Summer of Code :tada: :tada:","files":null},{"type":4,"timestamp":1562423578,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50MjQ2Mzk2Njk1OQ=="},"nonce":"PDDUveaNOE0xaZkcDlo2XzrAZvI=","status":2},{"type":3,"timestamp":1562423838,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDUwODkzMTA1Mw==","github-url":"https://github.com/MichaelMure/git-bug/issues/56#issuecomment-508931053"},"nonce":"0jwuWcRt3r0zFf1dq9Z+gcOXuPM=","message":"The exporter just landed in master, which means you can use git-bug as an offline remote for github !\n\nThere is still a few things to take care of to have a very robust bridge (#164 #167 #175 #176), but most of the job is done","files":null},{"type":6,"timestamp":1562436781,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDI0NTc3NDY5OA=="},"nonce":"72ruXr6ArfCHuau2q5luNBaryOk=","target":"03968a336803252703f18a3f51e6cea16a8fa15e59286f7aa89040e9854ed378","message":"The exporter just landed in master, which means you can use git-bug as an offline remote for github !\n\nThere is still a few things to take care of to have a very robust bridge (#164 #167 #175 #176 ), but most of the job is done","files":null}]}