{"author":{"id":"849e56d06e3336f74000df728dce87c471f475652db43122ead01451da9830c9"},"ops":[{"type":3,"timestamp":1584243477,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU5OTE2MzU0NQ==","github-url":"https://github.com/MichaelMure/git-bug/issues/357#issuecomment-599163545"},"nonce":"eIZaWqSGXUjdEgvYDFVLrH6n66Y=","message":"\u003e Any idea how you would interface with it ? Is there some API or code to import ?\n\nCurrently SSB's dominant implementation language is node, and I believe that the closest thing to an API available for [`git-ssb`](https://git.scuttlebot.io/%25n92DiQh7ietE%2BR%2BX%2FI403LQoyf2DtR3WQfCkDKlheQU%3D.sha256) Issues is the [`ssb-issues`](http://git-ssb.celehner.com/%25k2hR1aGh735Y7bgIeoPepMGbagO8YBBau1cUa6wVJGU%3D.sha256) node library that is initialized with the distributed [`ssb-server`](https://www.npmjs.com/package/ssb-server) (a.k.a. `sbot`) instance running locally with node.\n\n1/ With git-bug implemented in golang, I suppose extending/wrapping the `ssb-issues` node library to expose a local Issues API served via the local `ssb-server` instance would be one approach. Or we can perhaps interrogate [`git-ssb-web`](http://git-ssb.celehner.com/%25q5d5Du%2B9WkaSdjc8aJPZm%2BjMrqgo0tmfR%2BRcX5ZZ6H4%3D.sha256) APIs which [may already be served locally](http://git-ssb.celehner.com/%25q5d5Du%2B9WkaSdjc8aJPZm%2BjMrqgo0tmfR%2BRcX5ZZ6H4%3D.sha256#usage) on [http://localhost:7718](http://localhost:7718). All SSB data is currently formatted with JSON. The new git-bug golang library implementing the `git-ssb` bridge would need to pass the git repo ref id (ssb-id) to allow git-ssb to identify the root node within the SSB append-only log. Not sure about authentication/authorization approach yet.\n\nI will bounce these initial quick thoughts off others with more ssb \u0026 node experience, to see if they suggest a more elegant approach.\n\n2/ I also noticed that `git-ssb` comes with a basic cli command to list issues (`git ssb issues [--all|--open|--closed]`, which is read-only). In addition, anyone may run [`git-ssb-web`](http://git-ssb.celehner.com/%25q5d5Du%2B9WkaSdjc8aJPZm%2BjMrqgo0tmfR%2BRcX5ZZ6H4%3D.sha256) attached to their local `ssb-server` instance, and interact fully (create/edit/close/list) with the `git-ssb` Issues basic tracker, even while disconnected from the network. So, although I will still use git-bug with `git-ssb` repos regardless, and a bridge to `git-ssb` Issues will be nice (and appears to be fairly straightforward to implement), I'm not sure how many other people will actually use it. :man_shrugging:  \n\n* [ssb-issues - npm](https://www.npmjs.com/package/ssb-issues)\n* [cel/ssb-issues](http://git-ssb.celehner.com/%25k2hR1aGh735Y7bgIeoPepMGbagO8YBBau1cUa6wVJGU%3D.sha256)\n* [cel/git-ssb](https://git.scuttlebot.io/%25n92DiQh7ietE%2BR%2BX%2FI403LQoyf2DtR3WQfCkDKlheQU%3D.sha256)\n* [cel/git-ssb-web](http://git-ssb.celehner.com/%25q5d5Du%2B9WkaSdjc8aJPZm%2BjMrqgo0tmfR%2BRcX5ZZ6H4%3D.sha256)\n* [ssb-server - npm](https://www.npmjs.com/package/ssb-server)\n\nx-post: [ssb: ]()","files":null},{"type":6,"timestamp":1584247005,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6MzU4MDI0NTY0"},"nonce":"QE10DYO9mzEzZkyOmgFiQYyI9Pc=","target":"b67b361680399c5f481f4aa450af119f591964d10f4d6c236247115572f60aba","message":"\u003e Any idea how you would interface with it ? Is there some API or code to import ?\n\nCurrently SSB's dominant implementation language is node, and I believe that the closest thing to an API available for [`git-ssb`](https://git.scuttlebot.io/%25n92DiQh7ietE%2BR%2BX%2FI403LQoyf2DtR3WQfCkDKlheQU%3D.sha256) Issues is the [`ssb-issues`](http://git-ssb.celehner.com/%25k2hR1aGh735Y7bgIeoPepMGbagO8YBBau1cUa6wVJGU%3D.sha256) node library that is initialized with the distributed [`ssb-server`](https://www.npmjs.com/package/ssb-server) (a.k.a. `sbot`) instance running locally with node.\n\n1/ With git-bug implemented in golang, I suppose extending/wrapping the `ssb-issues` node library to expose a local Issues API served via the local `ssb-server` instance would be one approach. Or we can perhaps interrogate [`git-ssb-web`](http://git-ssb.celehner.com/%25q5d5Du%2B9WkaSdjc8aJPZm%2BjMrqgo0tmfR%2BRcX5ZZ6H4%3D.sha256) APIs which [may already be served locally](http://git-ssb.celehner.com/%25q5d5Du%2B9WkaSdjc8aJPZm%2BjMrqgo0tmfR%2BRcX5ZZ6H4%3D.sha256#usage) on [http://localhost:7718](http://localhost:7718). All SSB data is currently formatted with JSON. The new git-bug golang library implementing the `git-ssb` bridge would need to pass the git repo ref id (ssb-id) to allow git-ssb to identify the root node within the SSB append-only log. Not sure about authentication/authorization approach yet.\n\nI will bounce these initial quick thoughts off others with more ssb \u0026 node experience, to see if they suggest a more elegant approach.\n\n2/ I also noticed that `git-ssb` comes with a basic cli command to list issues (`git ssb issues [--all|--open|--closed]`, which is read-only). In addition, anyone may run [`git-ssb-web`](http://git-ssb.celehner.com/%25q5d5Du%2B9WkaSdjc8aJPZm%2BjMrqgo0tmfR%2BRcX5ZZ6H4%3D.sha256) attached to their local `ssb-server` instance, and interact fully (create/edit/close/list) with the `git-ssb` Issues basic tracker, even while disconnected from the network. So, although I will still use git-bug with `git-ssb` repos regardless, and a bridge to `git-ssb` Issues will be nice (and appears to be fairly straightforward to implement), I'm not sure how many other people will actually use this bridge. :man_shrugging:  \n\n* [ssb-issues - npm](https://www.npmjs.com/package/ssb-issues)\n* [cel/ssb-issues](http://git-ssb.celehner.com/%25k2hR1aGh735Y7bgIeoPepMGbagO8YBBau1cUa6wVJGU%3D.sha256)\n* [cel/git-ssb](https://git.scuttlebot.io/%25n92DiQh7ietE%2BR%2BX%2FI403LQoyf2DtR3WQfCkDKlheQU%3D.sha256)\n* [cel/git-ssb-web](http://git-ssb.celehner.com/%25q5d5Du%2B9WkaSdjc8aJPZm%2BjMrqgo0tmfR%2BRcX5ZZ6H4%3D.sha256)\n* [ssb-server - npm](https://www.npmjs.com/package/ssb-server)\n\nx-post: ssb:%CWTITFYuLdyg1xa4OPQ3/4lD9m7mybA2/R4JNUlZ6z8=.sha256","files":null}]}