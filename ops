{"author":{"id":"708ccc11728eda0dd404c8de33ac6b44bac2ffc95b2ffc6ea90ce98ccdb43935"},"ops":[{"type":3,"timestamp":1548267384,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQ1NjkwOTU0MA==","github-url":"https://github.com/MichaelMure/git-bug/issues/72#issuecomment-456909540"},"nonce":"ZOOkvGEkBMAIaGV0ydzLNKGBCLE=","message":"What I mean is that there is no migration system possible. Once a priority has been set in the history of a bug, it will not change, ever. A new value from a new configured set can override the priority later in the history of the bug though.  This has multiple consequences:\n\n1. in the context of a bug, you can have in its history a priority from an obsolete config set.\n1. in the context of a bug, there is not necessarily a value valid in the current config\n1. across bugs, you can have one bug with a priority from an outdated config and another with a value from the current config\n\nThis means that:\n\n1. we need to be able to validate a config at any point in time (the config system will take care of that)\n1. we need a way to compare priorities coming from different and disjoint config\n1. we need a way to map the raw value to a user readable thing (number, label, whatever)\n\nI think that your idea of using a number as a the support for priorities would work (it does allow to compare priorities across multiple config). Now the big question is how this number is translated for a user. I suppose we can say that a config is a set of label (\"low\", \"medium\", ..), each with a range to interpret the value. But I think we need to also show that a value is from an older config (say \"low (outdated)\").\n\nThis is mainly just rephrasing what you said, but it's kind of important to get the context right. It will also influence how the code works and looks like.","files":null},{"type":3,"timestamp":1548274985,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQ1Njk1MjI3Mw==","github-url":"https://github.com/MichaelMure/git-bug/issues/72#issuecomment-456952273"},"nonce":"3kRCD34qyGwgHH6P0hEkeK54p8M=","message":"But again, we can and should implement this feature with a default fixed set first and make it configurable later.","files":null}]}