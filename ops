{"author":{"id":"8d502eecd8c22d725cd2382697013f57b063b14ddb786a3c8531a99a89b56174"},"ops":[{"type":3,"timestamp":1551279045,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQ2Nzg5MDc0Ng==","github-url":"https://github.com/MichaelMure/git-bug/issues/16#issuecomment-467890746"},"nonce":"JMB1x6p5G0G9sVPwfXg0vezzpgI=","message":"First of all - git-bug looks awesome @MichaelMure . I was thinking to myself last night \"it would be cool if something like this existed\", and I found it today!\n\nIn my mind though, I'd like the bug operations to be tied to the source commits. That way, I could be working on fix-branch, mark the bug as \"closed\", but the bug remains \"open\" on the master branch until I merge fix-branch in (after CI passes and whatnot).\n\nMost of the issue / bug tracking software I use today *is* modeled the way that git-bug works though - I just think it's suboptimal in a git-first world.\n\nI *think* there might be some clever ways to still keep the refs/bugs data *outside* of the source commits, but achieve the same goals. The refs/bugs tree could mimic the exact structure of the source refs, with merge commits that always tie the refs together. It would probably get tricky with rebasing though...","files":null}]}