{"author":{"id":"a99b826294359757366d8d53a41dce5cf8e99657f3b1ce221b354e6a92dc7007"},"ops":[{"type":6,"timestamp":1619023805,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlRWRpdDo1MjY4ODc3NzM="},"nonce":"+NiJHw9bWyfU0h1ivgRjki6fwXY=","target":"38741b1f95e75a318ddfb4751abdbb971154954251dcbf408df6cc68a146a0fb","message":"This is an upstreamed issue originating here:  https://github.com/GlancingMind/git-bug/issues/11\n\nImplement Milestones. A milestone describes a bigger task, which requires\nmultiple issues to be resolved, possible in a given set of time.\nThis means, a milestone may have a deadline in which all the Issues\nmay be completed. The deadline shall currently have no effect on the milestone\nand simply provide a hint.\n\n- Add a description to a milestone.\n- Add Issues to an existing milestone. This may be done by using special\n\"milestone-\u003cname\u003e\" labels. The user should then be able to see all current\nmilestones within a new menu. The milestones shall have a completion-value,\nwhich will be a percentage determined by all associated issues and their\nopen/close-state.  This means a milestone should be 100% complete, if all\nassigned Issues are closed.\n\nLike Issues, milestones may be active or closed as needed.\nNOTE: Maybe milestones can be implemented as Issues, with only some fanzy UI\nvariation (progressbar). Could extend go code to add milestones as composite of the composite-pattern","files":null},{"type":3,"timestamp":1619023777,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDgyNDIwODc2Ng==","github-url":"https://github.com/MichaelMure/git-bug/issues/639#issuecomment-824208766"},"nonce":"WKxLI4nsfH+52xcfHg0MqkB1xys=","message":"As you noticed, milestones and labels are conceptually very close. That said, they should *probably* have their own operation in git-bug's core instead of piggy-backing on the labels. That's a non-trivial amount of code to write, but that would be a lot of copy-pasting from the label's code.\n\nIf that's out of scope for your project maybe an intermediary solution would be to add the milestone's specific element in the GraphQL API and then map those into the label system? That way the webUI would stay untouched once someone actually implement that in the core.\n\n _Originally posted by @MichaelMure in https://github.com/GlancingMind/git-bug/issues/11#issuecomment-792815175_","files":null},{"type":6,"timestamp":1619023799,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6NDUzODM3MjUy"},"nonce":"bwt0ZsUUn3jYYYZ1LPbt3vk2XPo=","target":"796bb5387c0494c4297c3087b3b9cab84fb072571c9c519eeee52ef9861e33b9","message":"\u003e As you noticed, milestones and labels are conceptually very close. That said, they should *probably* have their own operation in git-bug's core instead of piggy-backing on the labels. That's a non-trivial amount of code to write, but that would be a lot of copy-pasting from the label's code.\n\u003e\n\u003e If that's out of scope for your project maybe an intermediary solution would be to add the milestone's specific element in the GraphQL API and then map those into the label system? That way the webUI would stay untouched once someone actually implement that in the core.\n\u003e\n\u003e _Originally posted by @MichaelMure in https://github.com/GlancingMind/git-bug/issues/11#issuecomment-792815175_","files":null}]}