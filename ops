{"author":{"id":"708ccc11728eda0dd404c8de33ac6b44bac2ffc95b2ffc6ea90ce98ccdb43935"},"ops":[{"type":3,"timestamp":1534539446,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQxMzk4NjI4NQ==","github-url":"https://github.com/MichaelMure/git-bug/issues/5#issuecomment-413986285"},"nonce":"QlawCRxbzIlttSpsxKXKACN7nFE=","message":"To give more details about the requirement, OperationPack hold currently very simple data (string, int, array..), and it's likely to stay the same even when adding new operations. For instance, embedded files are stored in git blobs and then linked in the git tree.\n\nThe only tricky part is that an OperationPack is an mixed array of Operation so the decoder need to support that and match the correct go struct for each operation.","files":null},{"type":3,"timestamp":1534720787,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQxNDE2MzE4NA==","github-url":"https://github.com/MichaelMure/git-bug/issues/5#issuecomment-414163184"},"nonce":"BATwTYM3KxHMDjcNxBzqQtE6N74=","message":"With all these format that could fit the bill, the best way to choose would be a benchmark for both performance and blob size for several format (at least JSON and CBOR). Who knows how the git compression behave on something that is already binary.\n\nMaybe the git people could do an educated guess.","files":null}]}